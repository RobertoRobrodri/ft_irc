Good check
./ircserv 127.0.1.16:6676:test 7000 9
./ircserv 127.0.0.1:6676:pass 6776 pass

Documents to take a look

https://www.rfc-editor.org/rfc/rfc2812  - Client Protocol
https://www.rfc-editor.org/rfc/rfc2813  - Server Protocol
https://www.rfc-editor.org/rfc/rfc2810  - Architecture
https://www.rfc-editor.org/rfc/rfc2811  - Channels

https://en.wikipedia.org/wiki/Internet_Relay_Chat - General Info
https://www.w3.org/Addressing/draft-mirashi-url-irc-01.txt#:~:text=IRC%20servers%20often%20use%20the,for%20clients%20to%20connect%20to.  - Port Range - Security Measures
https://www.geekshed.net/tag/limits/ - IRC LIMITS

# Socket stuff
https://www.gta.ufrj.br/ensino/eel878/sockets/sockaddr_inman.html
https://pubs.opengroup.org/onlinepubs/009695399/functions/inet_addr.html
https://www.gnu.org/software/libc/manual/html_node/Socket_002dLevel-Options.html#Socket_002dLevel-Options
=======
https://modern.ircdocs.horse/ - Resume
IRSSI - cliente por terminal
NETCAT - nc localhost <port>
=======
Cliente de referencia: IRSSI
  INSTALL:
  - MACOS = brew install irssi
  - Página oficial = https://irssi.org/download/
  - /connect localhost
  - En cuanto se conecta, el cliente envia tres comandos: CAP LS (ignorar), USER y NICK
  https://ircv3.net/specs/extensions/capability-negotiation.html#connection-registration
=======
TAREAS
[ ] Test unitarios (Zome)
[✅] Encontrar cliente de referencia y probarlo (Rbrdr)
[ ] Comandos NICK y USER (Enviar confrmación cuando existen ambos)
[ ] Testear que los comandos no se bloquean
[ ] Añadir comandos para crear y unirse a un canal
[ ] Comandos incorrectos
[✅] Kill cliente
[✅] Kill conexión
[ ] Todos los comandos de operación de canales
[ ] Probar conexión irc
[ ] Mensajes privados y avisos
[ ] Privilegios de usuario
[ ] serv::wait_for_connection change TIMEOUT
[ ] servwait_for_connection check ping clients
[ ] autosock::server_listening revise setsockopt flags
[ ] autosock::server_listening define max size for poll
